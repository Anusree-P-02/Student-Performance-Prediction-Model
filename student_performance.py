# -*- coding: utf-8 -*-
"""Student_Performance.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lxxyAptsV8k6BPvHPnM7kz03Fsw87GHm
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('/content/drive/MyDrive/Dataset_ML/Student_Performance.csv')

df

df.shape

df.dtypes

df.info()

df.describe()

"""**Missing value handling**"""

df.isna().sum()

df.duplicated().sum()

for i in df:
  print(df[i].value_counts())
  print('______________________')

from sklearn.preprocessing import LabelEncoder
label=LabelEncoder()
df['Extracurricular Activities']=label.fit_transform(df['Extracurricular Activities'])

x

x=df.drop(columns='Performance Index')
y=df['Performance Index']

y

"""**Data Spliting**"""

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.5,random_state=5)

"""**Linear regression**"""

from sklearn.linear_model import LinearRegression
linear=LinearRegression()
linear.fit(x_train,y_train)

y_predict=linear.predict(x_test)

from sklearn.metrics import mean_absolute_error,mean_absolute_percentage_error,root_mean_squared_error,r2_score,root_mean_squared_error
print(f'MAE: {mean_absolute_error(y_test,y_predict)}')
print(f'MAPE: {mean_absolute_percentage_error(y_test,y_predict)*100}')
print(f'RMSE: {root_mean_squared_error(y_test,y_predict)}')
print(f'R2S: {r2_score(y_test,y_predict)}')
print(f'RMSE: {root_mean_squared_error(y_test,y_predict)}')

"""**Polynomial Regression**"""

from sklearn.preprocessing import PolynomialFeatures
poly=PolynomialFeatures()
x_train_poly=poly.fit_transform(x_train)
x_test_poly=poly.fit_transform(x_test)

poly_model=LinearRegression()
poly_model.fit(x_train_poly,y_train)

y_predict_poly=poly_model.predict(x_test_poly)

print(f'MAE: {mean_absolute_error(y_test,y_predict_poly)}')
print(f'MAPE: {mean_absolute_percentage_error(y_test,y_predict_poly)*100}')
print(f'RMSE: {root_mean_squared_error(y_test,y_predict_poly)}')
print(f'R2S: {r2_score(y_test,y_predict_poly)}')
print(f'RMSE: {root_mean_squared_error(y_test,y_predict_poly)}')

dict1={'model':linear,'label':label,'lab':df['Extracurricular Activities']}

import pickle
with open('Student_model.pkl','wb') as obj1:
  pickle.dump(dict1,obj1)

with open('Student_model.pkl','rb') as obj2:
  pickle.load(obj2)